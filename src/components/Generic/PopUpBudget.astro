---
    

---

<section id="popUpBudget" class="hidden grid place-items-center fixed z-50 top-0 left-0 right-0 !mt-0 w-full h-screen bg-white overflow-y-auto">    
    <div id="closePopUp" class="absolute top-4 right-4 text-right rounded-xl text-lg text-teal-900 cursor-pointer hover:bg-gray-200 p-2">X</div>
    <div id="popUpcontent" class="text-center p-8">
        <!-- Pantalla de presentación -->
        <div id="introScreen">
            <h3 class="text-3xl font-serif font-bold mb-4">Estas son algunas preguntas para poder darte un presupuesto detallado</h3>
            <button id="startButton" class="mt-4 px-4 py-2 bg-teal-900 text-white rounded hover:bg-teal-800">Empezar</button>
        </div>
        
        <div id="questionScreens" class="hidden">
            <p id="questionIndicator" class="text-md top-6 left-0 right-0 block absolute"></p>
            <form id="questionForm" class="space-y-4 mx-auto max-w-xl mb-20">
                <!-- Aquí se insertarán las preguntas dinámicamente -->
            </form>
            <div class=" space-x-4">
                <button type="button" id="prevCategory" class="hidden px-4 py-2 border border-gray-300 rounded hover:bg-gray-100">← Anterior</button>
                <button type="button" id="nextCategory" class="px-4 py-2 bg-teal-900 text-white rounded hover:bg-teal-800">Siguiente →</button>
            </div>
        </div>
        
        <!-- Pantalla final -->
        <div id="finalScreen" class="hidden">
            <h3 class="text-3xl font-serif font-bold mb-4">¡Gracias por responder las preguntas!</h3>
            <div id="summary" class="mb-4"></div> <!-- Contenedor para las respuestas -->
            <div id="finalPrice" class="text-2xl font-bold mb-4"></div> <!-- Contenedor para el precio -->
            <button id="restartButton" class="mt-4 px-4 py-2 bg-teal-900 text-white rounded hover:bg-teal-800">Volver a empezar</button>
        </div>
    </div>
</section>


<script>

    import {toAsk} from "./PriceList.js";
    const questions = toAsk;

    document.getElementById('closePopUp').addEventListener('click', function(e){
        document.getElementById('popUpBudget').classList.add('hidden');
    });

    let answers = {};

    let currentCategory = 1;
    const totalCategories = questions.length;

    


    document.getElementById('startButton').addEventListener('click', function() {
        document.getElementById('introScreen').classList.add('hidden');
        document.getElementById('questionScreens').classList.remove('hidden');
        document.getElementById('questionIndicator').textContent = `${currentCategory} / ${totalCategories}`;

    });
    document.getElementById('nextCategory').addEventListener('click', function() {
    // Almacenar las respuestas actuales
    let currentInputs = document.querySelectorAll(`.category[data-category="${currentCategory}"] input, .category[data-category="${currentCategory}"] select`);
    currentInputs.forEach(input => {
        if (input.type === "text" || input.type === "select-one" || input.type === "radio") {
            if (input.checked || input.type !== "radio") {  // Asegurarse de que el radio esté seleccionado
                answers[input.name] = input.value;
            }
        } else if (input.type === "checkbox" && input.checked) {
            if (!answers[input.name]) {
                answers[input.name] = [];
            }
            answers[input.name].push(input.value);
        }
    });


        if (currentCategory < totalCategories) {
            document.querySelector(`.category[data-category="${currentCategory}"]`).classList.add('hidden');
            currentCategory++;
            document.querySelector(`.category[data-category="${currentCategory}"]`).classList.remove('hidden');
            document.getElementById('questionIndicator').textContent = `${currentCategory} / ${totalCategories}`;
            if (currentCategory > 1) {
                document.getElementById('prevCategory').classList.remove('hidden');
            }
        }  else {
            document.getElementById('questionScreens').classList.add('hidden');
            document.getElementById('finalScreen').classList.remove('hidden');
            
            // Mostrar las respuestas en la pantalla final
            let summary = document.getElementById('summary');
            let answerList = '';
            for (let key in answers) {
                if (answers[key]) {  // Asegurarse de que la respuesta tiene valor
                //if (answers[key] && answers[key].length > 0) {  // Asegurarse de que la respuesta tiene valor

                    let questionLabel = findQuestionLabelByKey(key);
                    answerList += `<div class="mb-4">`;
                    answerList += `<p>${questionLabel}:</p>`;
                    if (Array.isArray(answers[key])) {
                        answerList += `<p class="font-bold ml-4">${answers[key].join(', ')}</p>`;
                    } else {
                        answerList += `<p class="font-bold ml-4">${answers[key]}</p>`;
                    }
                    answerList += `</div>`;
                }
            }
            summary.innerHTML = answerList;

            
            // Calcular el precio en función de las respuestas y mostrarlo
            let price = calculatePrice(answers);
            document.getElementById('finalPrice').textContent = `Precio estimado: ${price}€`;
            
            document.getElementById('finalScreen').classList.remove('hidden');
        }
    });



    document.getElementById('prevCategory').addEventListener('click', function() {
        if (currentCategory > 1) {
            document.querySelector(`.category[data-category="${currentCategory}"]`).classList.add('hidden');
            currentCategory--;
            document.querySelector(`.category[data-category="${currentCategory}"]`).classList.remove('hidden');
            document.getElementById('questionIndicator').textContent = `Categoría ${currentCategory} de ${totalCategories}`;
            if (currentCategory === 1) {
                document.getElementById('prevCategory').classList.add('hidden');
            }
        }
    });

    
    function findQuestionLabelByKey(key) {
        for (let category of questions) {
            for (let item of category.items) {
                if (item.name === key) {
                    return item.label;
                }
            }
        }
        return key;  // Devuelve la clave si no se encuentra la etiqueta de la pregunta
    }

    function calculatePrice(answers) {
        let price = 0;

        questions.forEach(question => {
            question.items.forEach(item => {
                if (item.type === "select" || item.type === "radio") {
                    let selectedOption = item.options.find(option => option.label === answers[item.name]);
                    if (selectedOption) {
                        price += selectedOption.price;
                    }
                } else if (item.type === "checkbox" && answers[item.name]) {
                    answers[item.name].forEach(answerOption => {
                        let selectedOption = item.options.find(option => option.label === answerOption);
                        if (selectedOption) {
                            price += selectedOption.price;
                        }
                    });
                }
            });
        });

        return price;
    }



    document.getElementById('restartButton').addEventListener('click', function() {
        // Reiniciar el formulario y volver a la pantalla de inicio
        document.getElementById('finalScreen').classList.add('hidden');
        document.getElementById('introScreen').classList.remove('hidden');
        currentCategory = 1;
        document.querySelector(`.category[data-category="${currentCategory}"]`).classList.remove('hidden');
        for (let i = 2; i <= totalCategories; i++) {
            document.querySelector(`.category[data-category="${i}"]`).classList.add('hidden');
        }
        answers = {};
    });

    // Función para generar las preguntas
    function generateQuestions() {
        const form = document.getElementById('questionForm');
        questions.forEach((category, index) => {
            const categoryDiv = document.createElement('div');
            categoryDiv.classList.add('category');
            categoryDiv.setAttribute('data-category', index + 1);
            if (index !== 0) {
                categoryDiv.classList.add('hidden');
            }

            category.items.forEach(item => {
                const questionDiv = document.createElement('div');
                questionDiv.classList.add('mb-4');

                const label = document.createElement('label');
                label.textContent = item.label;
                label.classList.add('block','font-bold','text-2xl','font-serif','mb-6', 'mt-14');
                questionDiv.appendChild(label);

                if (item.type === "text") {
                    const input = document.createElement('input');
                    input.type = "text";
                    input.id = item.name;
                    input.name = item.name;
                    input.classList.add('w-full', 'p-2', 'border', 'rounded');
                    questionDiv.appendChild(input);
                } else if (item.type === "checkbox" || item.type === "radio") {
                    item.options.forEach(option => {
                        const optionDiv = document.createElement('div');
                        optionDiv.classList.add('mb-1', 'text-left', 'py-2','px-6');

                        const input = document.createElement('input');
                        input.type = item.type;
                        input.name = item.name;
                        input.value = option.label;

                        if (option.checked) {  // Si la opción tiene el atributo checked, la marca por defecto
                            input.setAttribute('checked', 'checked');
                        }

                        optionDiv.appendChild(input);

                        const optionLabel = document.createElement('label');
                        optionLabel.textContent = option.label;
                        optionLabel.classList.add('ml-2');
                        optionDiv.appendChild(optionLabel);

                        questionDiv.appendChild(optionDiv);
                    });
                } else if (item.type === "select") {
                    const select = document.createElement('select');
                    select.id = item.name;
                    select.name = item.name;
                    item.options.forEach(option => {
                        const optionElement = document.createElement('option');
                        optionElement.value = option.label;
                        optionElement.textContent = option.label;
                        select.appendChild(optionElement);
                        select.classList.add('mb-1');
                    });
                    questionDiv.appendChild(select);
                }

                categoryDiv.appendChild(questionDiv);
            });

            form.appendChild(categoryDiv);
        });
    }



// Llamar a la función al cargar la página
document.addEventListener('DOMContentLoaded', generateQuestions);

</script>